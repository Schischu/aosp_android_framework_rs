/*
 * Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Don't edit this file!  It is auto-generated by frameworks/rs/api/generate.sh.

/*
 * rs_allocation_create.rsh: Alloccation Creation Functions
 *
 * The functions below can be used to create allocations from an invokable.
 */

#ifndef RENDERSCRIPT_RS_ALLOCATION_CREATE_RSH
#define RENDERSCRIPT_RS_ALLOCATION_CREATE_RSH

/*
 * rsCreatePrimitiveAllocation: Create an allocation of given type
 *
 * Creates an allocation of type rs_data_type.
 *
 * Use the x, y, and z variant to create a three-dimensional allocation.
 * Likewise, use the x, y variant for a two-dimensional allocation and the
 * x-only variant for a single-dimensional allocaion.
 *
 */
#if (defined(RS_VERSION) && (RS_VERSION >= 24))
extern rs_allocation __attribute__((overloadable))
    rsCreatePrimitiveAllocation(rs_data_type data_type, uint32_t x);
#endif

#if (defined(RS_VERSION) && (RS_VERSION >= 24))
extern rs_allocation __attribute__((overloadable))
    rsCreatePrimitiveAllocation(rs_data_type data_type, uint32_t x, uint32_t y);
#endif

#if (defined(RS_VERSION) && (RS_VERSION >= 24))
extern rs_allocation __attribute__((overloadable))
    rsCreatePrimitiveAllocation(rs_data_type data_type, uint32_t x, uint32_t y, uint32_t z);
#endif

/*
 * rsCreateVectorAllocation: Create a vector allocation of given type
 *
 * Creates a vector allocation with vecSize elements of type rs_data_type
 *
 * Use the x, y, and z variant to create a three-dimensional allocation.
 * Likewise, use the x, y variant for a two-dimensional allocation and the
 * x-only variant for a single-dimensional allocaion.
 *
 */
#if (defined(RS_VERSION) && (RS_VERSION >= 24))
extern rs_allocation __attribute__((overloadable))
    rsCreateVectorAllocation(rs_data_type data_type, size_t vecSize, uint32_t x);
#endif

#if (defined(RS_VERSION) && (RS_VERSION >= 24))
extern rs_allocation __attribute__((overloadable))
    rsCreateVectorAllocation(rs_data_type data_type, size_t vecSize, uint32_t x, uint32_t y);
#endif

#if (defined(RS_VERSION) && (RS_VERSION >= 24))
extern rs_allocation __attribute__((overloadable))
    rsCreateVectorAllocation(rs_data_type data_type, size_t vecSize, uint32_t x, uint32_t y,
                             uint32_t z);
#endif

/*
 * rsCreateAllocationTyped: (Internal API) Create an Allocation Launch a kernel in the current Script (with the slot number)
 *
 */
#if (defined(RS_VERSION) && (RS_VERSION >= 24))
extern rs_allocation __attribute__((overloadable))
    rsCreateAllocationTyped(rs_data_type data_type, rs_data_kind data_kind, uint32_t vecSize,
                            uint32_t dimX, uint32_t dimY, uint32_t dimz);
#endif

#endif // RENDERSCRIPT_RS_ALLOCATION_CREATE_RSH
